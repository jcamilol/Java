///////////////////
 Decide if or else
///////////////////

    **if statement 

        if(expression)
        {
            statements
        }

        if the expression written within the brackets of if statement is true, then the statement written in the body of the if (enclosed by curly brackets) are executed
    
    **if...else statement

        if(expression)
        {
            statements 1
        }
        else
        {
            statements 2
        }

        if the expression is true, statements 1 are executed. Otherwise, statements 2 are executed.

    **Nested if/else statements

        We can also use if or else inside another if or else statements

    **else if statement

    **Switch...case

        Normally, if we have to choose one case among many choices, nested if-else is used. But if the number of chices is large, switch...case is a better option as it makes code neat and easier.

        switch(expression)
        {
            case constant1:
                statements;
                break;
            case constant2:
                statements;
                break;
            /*you can give any number of cases*/
            default:
                statements;
        }

        In switch...case, value of the expression enclosed in the brackets () following switch is checked. If the value of the expression matches the value of the constant in case, the statements corresponding with that case will be executed.
        If the expression does not match any of the constant values, then the statements corresponding with default are executed.